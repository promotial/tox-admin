define(function(v){var w,p=v("kendo"),j=v("modules/core/core-module"),l=v("modules/core/dialog-viewmodels"),D=v("modules/core/wizard-viewmodels"),e=v("modules/core/base-classes"),g=v("modules/core/base-commands"),k=v("modules/core/dialog-service"),z=v("modules/workspace/solution-settings-service"),r=v("modules/options/options-module"),s=v("modules/project-navigator/project-navigator-module"),h=v("modules/workspace-operations/build-service"),A=v("modules/view-pane/view-pane-service"),q=v("modules/logging/logging-service"),B=v("text!./wizard-dialog-template.html"),n=v("text!./publish-w-index-template.html"),y=v("text!./publish-w-provision-template.html"),o=v("text!./publish-w-itunes-connect-template.html"),b=v("text!./publish-w-android-template.html");var i=window;v(["noamd/kendo.dataviz.qrcode.min"]);var u=D.BaseWizardViewModel.extend({init:function(E,G){var F=this;D.BaseWizardViewModel.fn.init.apply(F,arguments)}});var m=D.BasePageViewModel.extend({init:function(E){var F=this;D.BasePageViewModel.fn.init.apply(F,arguments)}});var f=D.BasePageViewModel.extend({init:function(E){var F=this;D.BasePageViewModel.fn.init.apply(F,arguments);F.project=E.project},setBuildRequestData:function(E){var F=this;F.platform=E;F.buildRequestData={Properties:{Platform:F.platform}}},build:function(){var E=this;E.set("isBuildRunning",true);E.set("hasError",false);q.logOutputMessage("Build solution started: "+iceConfiguration.solutionName);E.buildRequestData.Properties.Platform=E.platform;h.buildProject({project:E.project.getProjectInfo(),request:E.buildRequestData}).done($.proxy(E.onBuildFinished,E)).fail($.proxy(E.onBuildError,E))},onBuildFinished:function(I){var J=this,H="",E="";if(!J.get("isBuildRunning")){return}J.set("isBuildRunning",false);if(!I||!I.ResultsByTarget){J.setError("Server exception",I.Exception.Message);return}if(I.Errors&&I.Errors.length>0){J.setError("Build failed with error.",I.Output);return}if(I.ResultsByTarget){var F=I.ResultsByTarget.Build.Items;for(var G=0;G<F.length;G++){if(F[G].Platform===J.platform){H=F[G].FullPath}}}J.set("packageOutputPath",H);J.project.getLiveSyncTokenAsync().done(function(L){var K=j.navigationService.getMobilePackageAddress(L,H);J.set("packageLink",K)}).fail(function(K){J.setError("Unable to get LiveSync token","Please try rebuilding the project")});q.logOutputMessage(I.Output)},onBuildError:function(E){var F=this;F.set("isBuildRunning",false);F.setError("Unexpected server error",E.statusText||E.Message)},setError:function(F,E){var G=this;G.set("hasError",true);G.set("errorText",F);G.set("errorDetails",E);q.logOutputMessage(["Exception",F,E].join(": "))},hasBuildResult:function(){var E=this;return(!E.get("isBuildRunning")&&!E.get("hasError")&&!!E.get("packageLink"))},onErrorDatailsClick:function(){var G=this,F=G.get("errorText"),E=G.get("errorDetails");k.showMessageBox("Exception: "+F,E)},onRebuildClick:function(){this.build()},onCancelClick:function(){var E=this;E.set("isBuildRunning",false);E.setError("Build has been canceled","")}});var a=f.extend({init:function(){var E=this;f.fn.init.apply(E,arguments);E.setBuildRequestData(i.DevicePlatforms.Android);E.bind("bind",$.proxy(E.onBind,E));E.set("hasValidCert",false);E.set("validCertList",[]);E.set("showCertificateSelector",true);E.set("selectedCryptographicIdentityId",null);E.androidCertificateMinDate=new Date("10/22/2033 12:00:00 AM");E.set("minDateText",p.toString(E.androidCertificateMinDate,"d"))},onBind:function(){var E=this;E.initCertificateList()},initCertificateList:function(){var K=this,E=z.cryptographicIdentities(),J=z.getCodeSignIdentityFromSettings(K.project.getProjectIdentifier(),i.DevicePlatforms.Android),L=[],I=false;for(var G=0,H=E.length;G<H;G++){var F=E[G];if(F.expirationDate>K.androidCertificateMinDate){L.push({rowid:"android-cert-row"+G,name:F.Alias,expirationDate:F.expirationDate});if(J&&F.Alias===J.cryptographicIdentityId){I=true}}}K.set("hasValidCert",L.length>0);K.set("selectedCryptographicIdentityId",null);K.set("validCertList",L);if(J&&I){K.set("selectedCryptographicIdentityId",J.cryptographicIdentityId)}else{if(L.length>0){K.set("selectedCryptographicIdentityId",L[0].name)}}},onBuildClick:function(){var E=this;E.set("showCertificateSelector",false);E.buildRequestData.Properties.Configuration=i.BUILD_CONFIG_RELEASE;E.buildRequestData.Properties.AndroidCodesigningIdentity=E.get("selectedCryptographicIdentityId");E.build()}.attribute("track",{featureCategory:i.TrackingTags.featureCategory.Publish.name,featureName:i.TrackingTags.featureCategory.Publish.features.Android}),onCertificatesOptionsClick:function(){var E=this;r.showOptionsDialog("General/Certification Management").always($.proxy(E.initCertificateList,E))},onSelectCertificateClick:function(){var E=this;E.set("showCertificateSelector",true)}});var d=f.extend({init:function(){var E=this;f.fn.init.apply(E,arguments);E.setBuildRequestData(i.DevicePlatforms.iOS);E.set("showProvisionsSelector",true);E.set("selectedProvision",{ProvisionedDevices:[],ExpirationDate:"2013-03-19T13:01:35+02:00"});E.set("selectedCryptographicIdentityId",null);E.set("selectedProvisionValidCertificates",[]);E.set("selectedProvisionInvalidCertificates",[]);E.set("hasValidCert",false);E.set("hasInvalidCert",false);E.set("itcLogin","");E.set("itcPassword","");E.bind("bind",$.proxy(E.onBind,E))},onBind:function(){var E=this;E.initProvisions()},initProvisions:function(){var G=this;G.appProvisions=z.getProvisionCandidates(G.project.properties.AppIdentifier,[i.ProvisionTypeEnum.AppStore]);G.set("hasProvisions",(G.appProvisions&&G.appProvisions.length));$("#provisionList").kendoDropDownList({dataTextField:"Name",dataValueField:"Id",dataSource:new p.data.DataSource({data:G.appProvisions}),template:"${ data.Name } (${ data.ProvisionType })",change:function(H){G.set("selectedProvision",H.sender.dataItem());G.matchCertificates()}});var E=$("#provisionList").data("kendoDropDownList");E.list.width(350);if(G.appProvisions.length>0){G.selectProjectSettings();var F=G.get("selectedProvision").Identifier;E.select(function(H){return H.Identifier===F})}},onBuildClick:function(){var F=this,E=F.get("selectedProvision");if(E&&F.get("selectedCryptographicIdentityId")){F.buildRequestData.Properties.MobileProvisionIdentifier=E.Identifier;F.buildRequestData.Properties.iOSCodesigningIdentity=F.get("selectedCryptographicIdentityId");F.buildRequestData.Properties.iOSAppIdentifierPrefix=E.ApplicationIdentifierPrefix;F.buildRequestData.Properties.iOSCanBeDebugged=(E.ProvisionType===i.ProvisionTypeEnum.Development).toString().toLowerCase();F.buildRequestData.Properties.Configuration=i.BUILD_CONFIG_RELEASE}else{k.showConfirmationDialog("Build ",{message:"No matching certificate was found for selected provision.",accept:function(){F.set("isBuildRunning",false)},cancelVisible:false,rejectVisible:false,acceptText:"Ok"});F.set("isBuildRunning",false);return}F.set("showProvisionsSelector",false);F.build()}.attribute("track",{featureCategory:i.TrackingTags.featureCategory.Publish.name,featureName:i.TrackingTags.featureCategory.Publish.features.iOS}),onImportCertClick:function(){var E=this;r.showOptionsDialog("General/Certification Management").always($.proxy(E.matchCertificates,E))},onProvisionsOptionsClick:function(){var E=this;r.showOptionsDialog("Mobile/iOS").always($.proxy(E.initProvisions,E))},selectProjectSettings:function(){var G=this,F;var E=z.getSelectedCodeSignIdentity(G.project.properties.AppIdentifier,G.project.getProjectIdentifier(),G.platform);if(E){F=G._findProvisionById(E.provisionId)}if(!F&&G.appProvisions&&G.appProvisions.length){F=G.appProvisions[0]}G.set("selectedProvision",F);G.matchCertificates();if(E){G.set("selectedCryptographicIdentityId",E.cryptographicIdentityId)}},matchCertificates:function(){var O=this,N=O.get("selectedProvision"),G=O.get("selectedCryptographicIdentityId"),F=z.getCodeSignIdentityByProvision(N),I=false,H=false,P=[],K=[],M=null;O.set("selectedCryptographicIdentityId",null);for(var J=0,L=F.length;J<L;J++){var E=F[J];E.rowid="cert-row-"+J;if(E.isValid){if(!I){M=E.name}P.push(E);I=true}else{K.push(E);H=true}}O.set("hasValidCert",I);O.set("hasInvalidCert",H);O.set("selectedProvisionValidCertificates",P);O.set("selectedProvisionInvalidCertificates",K);O.set("selectedCryptographicIdentityId",M)},_findProvisionById:function(G){var H=this;for(var E=0;E<H.appProvisions.length;E++){var F=H.appProvisions[E];if(F.Identifier===G){return F}}return null},onSelectProvisionClick:function(){var E=this;E.set("showProvisionsSelector",true)},onITCSighInClick:function(){var G=this,H=G.get("itcLogin"),F=G.get("itcPassword"),E=G.get("packageOutputPath");G.set("hasLoginError",false);G.set("loginError","");G.set("isLoginProgress",true);ice.server.iTMSTransporterService.getApplicationsReadyForUpload({username:H,password:F}).done(function(I){G.set("isLoginProgress",false);G.parentView.selectPage("itunesconnect",{appList:I,username:H,password:F,packageOutputPath:E})}).fail(function(I){G.set("isLoginProgress",false);G.set("hasLoginError",true);G.set("loginError",I.statusText)})},onErrorDatailsClick:function(){var G=this,F=G.get("errorText"),E=G.get("errorDetails");k.showMessageBox("Exception: "+F,E)},onActivate:function(E){var F=this;if(E){F.set("showProvisionsSelector",!!E.showProvisionsSelector)}}});var c=D.BasePageViewModel.extend({init:function(E,G){var F=this;D.BasePageViewModel.fn.init.apply(F,arguments);F.project=E.project;F.username=G.username;F.password=G.password;F.packageOutputPath=G.packageOutputPath;F.validApp=F.matchValidApp(F.project.properties.AppIdentifier,G.appList);F.set("hasValidApp",!!F.validApp)},matchValidApp:function(E,F){for(var G=0,I=F.length;G<I;G++){var H=F[G];if(E===H.ReservedBundleIdentifier){H.version=H["Version Number"];return H}}},showUpload:function(){var E=this;return(E.get("hasValidApp")&&!E.get("isUploadingInProgress")&&!E.get("isUploadCompleate"))},onUploadClick:function(){var K=this,E=K.validApp.AppleID;K.set("isUploadingInProgress",true);K.set("hasError",false);var I=s.solutionService.solution();var J=I.text;var G=I.getMobileProject();var H=G.text;var F=[J,H,K.packageOutputPath].join("\\");ice.server.iTMSTransporterService.uploadApplication({packagePath:F,username:K.username,password:K.password,adamId:E}).done(function(L){K.set("isUploadingInProgress",false);K.set("isUploadCompleate",true)}).fail(function(L){K.set("isUploadingInProgress",false);K.set("hasError",true);K.set("errorText","Upload to iTunes Connect failed.");K.set("errorDetails",L.statusText)})},onErrorDatailsClick:function(){var G=this,F=G.get("errorText"),E=G.get("errorDetails");k.showMessageBox("Exception: "+F,E)},onSelectProvisionClick:function(){var E=this;E.parentView.selectPage("provision",{showProvisionsSelector:true})},onGoToBuildResultClick:function(){var E=this;E.parentView.selectPage("provision",{showProvisionsSelector:false})}});var C={index:{model:m,template:n},android:{model:a,template:b},provision:{model:d,template:y},itunesconnect:{model:c,template:o}};var t=g.CommandBase.extend({init:function(){var E=this;g.CommandBase.fn.init.apply(E,arguments);E.buildDialogOpened=false;E.featureCategory=i.TrackingTags.featureCategory.Publish.name;E.featureName=i.TrackingTags.featureCategory.Publish.features.ShowPublishDialog},canExecute:function(){var E=this;return !E.buildDialogOpened},execute:function(){var E=this;E.buildDialogOpened=true;A.saveModifiedFiles($.proxy(this._afterSaveAll,this))},_afterSaveAll:function(){var G=this,F=s.solutionService.solution();if(F){var E=F.getMobileProject();if(E.properties.ProjectTypeGuids===i.MOBILE_PROJECT_GUID){G.buildMobile(E)}else{k.showMessageBox("Run On Device","Exception: Missing mobile project!")}}},projectContainsStartUpFile:function(G){for(var E=0;E<G.childItems().length;E++){var F=G.childItems(E);if(F.text&&(F.text.toLowerCase()===i.MOBILE_STARTUP_FILE)){return true}}return false},buildMobile:function(E){var F=this;if(!F.projectContainsStartUpFile(E)){k.showMessageBox("Run On Device","Warning: The project should contain an '"+i.MOBILE_STARTUP_FILE+"' file.");return}var G=new u(E,C);F.dialog=k.showModalDialog("Publish",{viewModel:G,template:B});G.getPromise().always(function(){F.buildDialogOpened=false})},getType:function(){return i.COMMAND_PUBLISH_BUILD}});function x(){var E=this;E.registerCommands()}x.prototype={init:function(){},registerCommands:function(){j.commandService.registerCommand(new t(i.COMMAND_PUBLISH_BUILD,"Publish",[i.SOLUTION_MENU_COMMANDS,i.PROJECT_NAVIGATOR_NODE_COMMANDS],[{region:i.GLOBAL_REGION,keyShortcut:{modifiers:[i.KEY_CTRL],keys:[i.KEY_P],modifiersOSX:[i.KEY_CMD],preventDefaultBrowserAction:true}}],this))}};w=new x();w.init()});