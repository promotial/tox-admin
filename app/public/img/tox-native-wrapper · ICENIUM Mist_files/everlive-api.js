define(function(p){var a="v"+everliveConfiguration.apiVersion;var b=everliveConfiguration.portalUrl;var n=everliveConfiguration.serviceSchema+"://"+everliveConfiguration.serviceHost;var c=b+everliveConfiguration.mainPath;var l=b+everliveConfiguration.structurePath;var f=l;var d=b+everliveConfiguration.cloudCodePath;var e=b+everliveConfiguration.serverLogPath;var i=b+everliveConfiguration.permissionsPath;var k=b+everliveConfiguration.settingsPath;var j=b+everliveConfiguration.rolesPath;var m=b+everliveConfiguration.usersPath;var g=b+everliveConfiguration.filesPath;var h=b+everliveConfiguration.itemsPath;var o=kendo.Observable.extend({version:a,serverUrl:n,portalUrl:b,portalApps:c,portalTypes:l,portalFields:f,portalCloudCode:d,portalCloudCodeLog:e,portalPermissions:i,portalSettings:k,portalRoles:j,portalUsers:m,portalFiles:g,portalItems:h,accountKey:"",init:function(q){var r=this;if(!q){return}if(q.accountKey){r.accountKey=q.accountKey}},GetAccountKey:function(){var q=this;return q.accountKey},SetAccountKey:function(q){this.accountKey=q},ensureAccountKey:function(){if(!this.accountKey){throw new Error("Everlive Api requires the accountKey in order to process any requests.")}},getApiVersion:function(){return this.version},getServerUrl:function(){return this.serverUrl},getPortalUrl:function(){return this.portalUrl},getPortalApps:function(){return this.portalApps},getPortalTypes:function(){return this.portalTypes},getPortalFields:function(){return this.portalFields},getCloudCodeUrl:function(){return this.portalCloudCode},getCloudCodeLogUrl:function(){return this.portalCloudCodeLog},getPermissionsUrl:function(){return this.portalPermissions},getPortalSettingsUrl:function(){return this.portalSettings},getPortalRolesUrl:function(){return this.portalRoles},getPortalUsersUrl:function(){return this.portalUsers},getPortalFilesUrl:function(){return this.portalFiles},getPortalItemsUrl:function(){return this.portalItems},getApplications:function(){var q=this;q.ensureAccountKey();return q.executeRequest({url:"/Metadata/Applications",type:"GET",headers:{Authorization:"AccountKey "+q.accountKey}})},getContentTypes:function(q){var r=this;if(q===undefined){throw new Error("You should provide appId param to getContentTypes method")}r.ensureAccountKey();return r.executeRequest({url:"/Metadata/Applications/"+q+"/Types",type:"GET",headers:{Authorization:"AccountKey "+r.accountKey}})},getFields:function(q,r){var s=this;if(q===undefined){throw new Error("You should provide appId param to getFields method")}if(r===undefined){throw new Error("You should provide contentTypeId param to getFields method")}s.ensureAccountKey();return s.executeRequest({url:"/Metadata/Applications/"+q+"/Types/"+r+"/Fields",type:"GET",headers:{Authorization:"AccountKey "+s.accountKey}})},getCloudCode:function(q,r){var s=this;s.ensureAccountKey();return s.executeRequest({url:"/Metadata/Applications/"+q+"/Types/"+r+"/Code",type:"GET",headers:{Authorization:"AccountKey "+s.accountKey,Accept:"application/javascript"},converters:{"text script":function(t){return t}}})},getRoles:function(q){var r=this;if(!q){throw new Error("You should provide apiKey param to getRoles method")}r.ensureAccountKey();return r.executeRequest({url:"/Metadata/Applications/"+q+"/Roles",type:"GET",headers:{Authorization:"AccountKey "+r.accountKey}})},getPermissions:function(q){var r=this;if(q===undefined){throw new Error("You should provide appId param to getRoles method")}r.ensureAccountKey();return r.executeRequest({url:"/Metadata/Applications/"+q+"/Permissions",type:"GET",headers:{Authorization:"AccountKey "+r.accountKey}})},executeRequest:function(s){var t=this;if(!s){throw new Error("you should provide options to executeRequest method")}var v=t.serverUrl+"/"+t.version;if(s.url){v+=s.url}var u="GET";if(s.type){u=s.type}var r={};if(s.headers){r=s.headers}var q={};if(s.converters){q=s.converters}return $.ajax({url:v,headers:r,type:u,converters:q,dataType:"json"})}});return new o()});